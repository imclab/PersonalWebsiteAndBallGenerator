{
  "name": "helper-lib",
  "description": "Extensive collection of Handlebars helpers.",
  "version": "0.2.5",
  "homepage": "https://github.com/assemble/helper-lib",
  "author": {
    "name": "assemble",
    "url": "https://github.com/assemble/assemble"
  },
  "contributors": [
    {
      "name": "Brian Woodward",
      "url": "https://github.com/doowb"
    },
    {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/assemble/helper-lib.git"
  },
  "bugs": {
    "url": "git://github.com/assemble/helper-lib/isues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/assemble/helper-lib/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "highlight.js": "~7.3.0",
    "js-yaml": "~2.0.4",
    "lodash": "~1.1.1",
    "marked": "~0.2.8",
    "mime": "~1.2.9",
    "minimatch": "~0.2.12",
    "to": "~0.2.9"
  },
  "devDependencies": {
    "amdefine": "0.0.4",
    "chai": "~1.5.0",
    "coffee-script": "~1.6.2",
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-coffee": "~0.6.4",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-jshint": "~0.2.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-mocha-test": "~0.2.0",
    "handlebars": "1.0.10",
    "minimatch": "~0.2.12",
    "should": "~1.2.2",
    "to": "~0.2.9"
  },
  "keywords": [
    "assemble",
    "block helper",
    "client-side templates",
    "example helper",
    "handle bars js",
    "handlebar helper",
    "handlebars block helper",
    "handlebars custom helpers",
    "handlebars escape",
    "handlebars for loop",
    "handlebars helper",
    "handlebars helpers",
    "handlebars if helper",
    "handlebars list",
    "handlebars loop index",
    "handlebars loop",
    "handlebars register helper",
    "handlebars view helper",
    "handlebars",
    "helper library",
    "helper",
    "helpers",
    "javascript templates",
    "jst",
    "loop handlebars",
    "mustache or handlebars",
    "mustaches template",
    "mustaches templates",
    "site builder",
    "template helpers",
    "templates",
    "use handlebars",
    "utilities"
  ],
  "readme": "# [Helper Library v0.2.5](http://github.com/assemble/helper-lib) [![Build Status](https://travis-ci.org/assemble/helper-lib.png)](https://travis-ci.org/assemble/helper-lib)\n\n> Extensive collection of Handlebars helpers.\n\n## Quick start\nFor linting and testing this project uses Grunt `~0.4.1`, but Grunt is **not required** to use the helpers. Check out the [Getting Started](http://gruntjs.com/getting-started) guide to learn more about Grunt.\n\n```shell\nnpm install helper-lib --save\n```\nOnce helper-lib has been installed, it may be used within your application with the following JavaScript:\n\n```js\nvar handlebars = require('handlebars');\nvar helpers = require('helper-lib');\nhelpers.register(handlebars);\n```\n\nNow your handlebars instance will have access to the helpers.\n\n**Table of Contents** \n\n## [The Helpers](#the-helpers)\n\n### [Special](#special)\n* [{{changelog}}](#changelog)\n* [{{formatPhoneNumber}}](#formatphonenumber)\n\n### [Strings](#strings)\n* [{{hyphenate}}](#hyphenate)\n* [{{dashify}}](#dashify)\n* [{{lowercase}}](#lowercase)\n* [{{uppercase}}](#uppercase)\n* [{{capitalizeFirst}}](#capitalizefirst)\n* [{{capitalizeEach}}](#capitalizeeach)\n* [{{titleize}}](#titleize)\n* [{{sentence}}](#sentence)\n* [{{reverse}}](#reverse)\n* [{{truncate}}](#truncate)\n* [{{center}}](#center)\n* [{{nl2br}}](#nl2br)\n\n### [Collections](#collections)\n* [{{first}}](#first)\n* [{{withFirst}}](#withfirst)\n* [{{last}}](#last)\n* [{{withLast}}](#withlast)\n* [{{after}}](#after)\n* [{{withAfter}}](#withafter)\n* [{{before}}](#before)\n* [{{withBefore}}](#withbefore)\n* [{{join}}](#join)\n* [{{sort}}](#sort)\n* [{{withSort}}](#withsort)\n* [{{length}}](#length)\n* [{{lengthEqual}}](#lengthequal)\n* [{{empty}}](#empty)\n* [{{any}}](#any)\n* [{{inArray}}](#inarray)\n* [{{eachIndex}}](#eachindex)\n* [{{eachProperty}}](#eachproperty)\n\n### [Math](#math)\n* [{{add}}](#add)\n* [{{subtract}}](#subtract)\n* [{{divide}}](#divide)\n* [{{multiply}}](#multiply)\n* [{{floor}}](#floor)\n* [{{ceil}}](#ceil)\n* [{{round}}](#round)\n* [{{sum}}](#sum)\n\n### [Numbers](#numbers)\n* [{{toFixed}}](#tofixed)\n* [{{toPrecision}}](#toprecision)\n* [{{toExponential}}](#toexponential)\n* [{{toInt}}](#toint)\n* [{{toFloat}}](#tofloat)\n* [{{toAbbr}}](#toabbr)\n* [{{addCommas}}](#addcommas)\n\n### [Comparisons: Equal](#comparisons-equal)\n* [{{is}}](#is)\n* [{{if_eq}}](#if_eq)\n* [{{isnt}}](#isnt)\n* [{{or}}](#or)\n* [{{and}}](#and)\n* [{{unless_eq}}](#unless_eq)\n\n### [Comparisons: Greater Than](#comparisons-greater-than)\n* [{{if_gt}}](#if_gt)\n* [{{gt}}](#gt)\n* [{{unless_gt}}](#unless_gt)\n* [{{if_gteq}}](#if_gteq)\n* [{{gte}}](#gte)\n* [{{unless_gteq}}](#unless_gteq)\n\n### [Comparisons: Less Than](#comparisons-less-than)\n* [{{lt}}](#lt)\n* [{{lte}}](#lte)\n* [{{unless_lt}}](#unless_lt)\n* [{{unless_lteq}}](#unless_lteq)\n\n### [Dates](#dates)\n* [{{formatDate}}](#formatdate)\n* [{{now}}](#now)\n* [{{timeago}}](#timeago)\n\n### [Inflections](#inflections)\n* [{{inflect}}](#inflect)\n* [{{ordinalize}}](#ordinalize)\n\n### [HTML](#html)\n* [{{gist}}](#gist)\n* [{{embed}}](#embed)\n* [{{blockquote}}](#blockquote)\n* [{{stripes}}](#stripes)\n* [{{timeline}}](#timeline)\n* [{{ul}}](#ul)\n* [{{ol}}](#ol)\n* [{{br}}](#br)\n\n### [Logging](#logging)\n* [{{log}}](#log)\n* [{{debug}}](#debug)\n\n### [Miscellaneous](#miscellaneous)\n* [{{default}}](#default)\n* [{{include}}](#include)\n\n\n## Overview\nHandlebars.js ships with some built-in helpers, such as `{{#each}}`, `{{#if}}` and `{{#unless}}`. Here is how helpers work:\n\n* A Handlebars helper call is a simple identifier, followed by zero or more parameters (separated by space).  \n* Each parameter is a Handlebars expression. \n* Handlebars helpers can be accessed from any context in a template.\n\n[Handlebars.js](https://github.com/wycats/handlebars.js) is currently the default template library for [assemble](http://github.com/assemble/assemble).\n\n\n\n#### Custom Helpers\n\n> Contributions welcome! Please consider adding your own helpers to this library.\n\nHandlebars accels over other templating libraries when it comes to creating your own custom helpers. Just register your function into Handlebars with the `Handlebars.registerHelper` method, and that helper will be available to any template you compile afterwards. \n\nHandlebars allows two different kinds of helpers:\n\n* **Expression helpers** are basically regular functions that take the name of the helper and the helper function as arguments. Once an expression helper is registered, it can be called anywhere in your templates, then Handlebars takes the expression's return value and writes it into the template.\n* **Block helpers** There are a few block helpers included by default with Handlebars, `{{#each}}`, `{{#if}}` and `{{#unless}}`. Custom block helpers are registered the same way as exptression helpers, but the difference is that Handlebars will pass the contents of the block compiled into a function to the helper.\n\n## The Helpers\n\n### Special\n\n#### embed\n_Embed code from given file_\n\nParameters: \n* `String|File` : path to the file you want to embed\n* `String (optional)`: Optional second parameter to \"force\" a specific language to use fo syntax highlighting.\n\nSyntax: `{{ embed [file] [syntax] }}`\n\nHelper also:\n* Unless overridden by a given extension, the helper will automatically apply the extension of the given file next to the first \"code fence\" (` ``` html`) in the output.\n* When embedding a markdown snippet (`.md|markdown|markd`), the helper automatically converts any code fences inside the snippet their unicode equivalent (`&#x60;&#x60;&#x60;`)\n\nExample:\n``` hbs\n{{ embed 'src/test.json' }}\n\n\n// Force highlighting as `javascript` instead of `json`\n{{ embed 'src/test.json' 'javascript' }}\n```\n\n### README Helpers\n\n#### authors\nTODO...\n\n### Travis CI\n\n#### travis\nCreates a \"full\" Travis CI link in markdown format.\nParams: `branch`\nType: `String`\nUsage: `{{travis [branch]}}`\n\nExample using default: `{{travis}}`\n\n``` md\n# [helper-lib v2.0.0](https://github.com/assemble/helper-lib)[![Build Status](https://travis-ci.org/assemble/helper-lib.png)](https://travis-ci.org/assemble/helper-lib)\n```\n\nExample with branch: `{{travis 'master'}}`\n\n``` md\n# [helper-lib v2.0.0](https://github.com/assemble/helper-lib)[![Build Status](https://travis-ci.org/assemble/helper-lib.png?branch=master)](https://travis-ci.org/assemble/helper-lib)\n```\n\n#### travis-badge\nCreates a Travis CI link in markdown format.\nParams: `none`\nUsage: `{{travis-badge}}`\n\nExample:\n\n``` md\n[![Build Status](https://travis-ci.org/assemble/helper-lib.png)](https://travis-ci.org/assemble/helper-lib)\n```\n\n#### changelog\nA few convenience helpers that read data in YAML format, and do interesting things with the data. Well... they \"do things\" with the data. Anyway I guess only nerds like me find it interesting. \n\n**NOTE**: These helpers will throw an error if the source files are not  valid YAML format, using the following conventions:\n\nA couple things to keep in mind about YAML:\n\n* YAML is picky, so don't be surprised if the parser throws an error from improperly placed quotation marks.\n* Seriously, don't be surprised. If you even come onto the issues and act surprised when it happens, an automated message will tell you to read the first bullet.\n\nHere is an example of the format to follow in your `CHANGELOG` file:\n\n``` yaml\nv0.1.2\n  date: \"2014-04-09\"\n  changes:\n    - The future sucks.\n    - This is my third and last commmit from the future.\nv0.1.1\n  date: \"2014-04-08\"\n  changes:\n    - Second commit from the future.\n    - The future is more boring that I thought it would be.\nv0.1.0\n  date: \"2014-03-07\"\n  changes:\n    - First commit... from the future. Yes!\n```\nOf coure, you are under no obligation to make your changelog entries as interesting as these, and you may record your entries at any point in whatever timeline you prefer, but whatever you write must be valid YAML when you do it.\n\nThe output will look like this:\n\n``` md\n* 2013-03-15    v0.1.2    Update README.md with documentation, examples.\n* 2013-03-06    v0.1.0    First commit.\n```\n\n* More info here: [js-yaml](https://github.com/nodeca/js-yaml)\n* See the tests here: [test/helpers/special_test.js](test/helpers/special_test.js)\n\n\n\n### Other\n\n#### formatPhoneNumber\n_Output a formatted phone number_\nCredit: [Treehouse Blog](http://blog.teamtreehouse.com/handlebars-js-part-2-partials-and-helpers)\n```js\nphoneNumber: 4444444444\n```\n``` handlebars\n{{formatPhoneNumber phoneNumber}}\n```\nResult:\n```\n(444) 444-4444\n```\n\n\n### File\n\n#### include \n_Include external files._\n\n<br>Pattern: `{{include [name] [data]}}`\n<br>Parameters:\n\n* name (required): `[string]` - The name or path of the file in which your template is defined. (Required)\n* data (optional): `[int|string|collection]` - Data you want to use inside the include. \n\nData (collection): `planet-express.json`\n\n``` js\n[\n  \"Professor Farnsworth\", \n  \"Fry\", \n  \"Bender\"\n]\n```\n\nInclude (partial to be \"included\"): `planet-express.hbs`\n``` html\n{{sort this}}\n```\n\nTemplate:\n``` html\n<p>{{include \"planet-express.hbs\" data}}</p>\n```\n\nResult:\n``` html\n<p>Bender, Fry, Professor Farnsworth</p>\n```\n\n\n### example helpers, not for actual use!\n\nWhy do this? The goal is to inspire other concepts that build from this one.\n\n#### glob\n_Use globbing patterns to embed content from specified file or files._\n<br>Parameters: `String`\n<br> Default: `undefined`\n\nExamples:\n``` html\n{{glob 'src/files/*.md'}}\n{{glob 'src/files/*.{txt,md}'}}\n```\n\n#### copy\n_Example helper, copies file A to path B._\n<br>Parameters: `String`\n<br> Default: `undefined`\n\nExample:\n``` html\n{{copy 'a.html' '../dir/b.txt'}}\n```\n\n\n### Strings\n#### occurrences \n_Evaluate string A, and count the occurrences of string B within string A_\n<br>Default: `undefined`\n<br>Parameters:\n* `String A` (required): The string to evaluate\n* `String B` (required): The string to look for and count in \"string A\"\n\n``` handlebars\n{{occurrences \"evaluate this string\" \"evaluate\"}}\n\n// Result \n1\n```\n\n#### hyphenate\n_Replace spaces in string with hyphens._\n<br>Parameters: `none`\n``` handlebars\n{{hyphenate \"make this all hyphenated\"}}\n\n// Result \nmake-this-all-hyphenated\n```\n\n#### dashify\n_Same as `hyphenate`, but replaces dots in string with hyphens._\n<br>Parameters: `none`\n``` handlebars\n{{dashify \"make.this.all.hyphenated\"}}\n\n// Result\nmake-this-all-hyphenated\n```\n\n#### lowercase\n_Turns a string to lowercase._\n<br>Parameters: `none`\n``` handlebars\n{{lowercase \"MAKE THIS ALL LOWERCASE\"}}\n\n// Result\nmake this all lowercase\n```\n\n#### uppercase\n_Turns a string to uppercase. Opposite of `{{lowercase}}`._\n<br>Parameters: `none`\n``` handlebars\n {{uppercase \"make this all uppercase\"}}\n\n// Result\nMAKE THIS ALL UPPERCASE\n```\n\n#### capitalizeFirst\n_Capitalizes the first word in a string._\n<br>Parameters: `none`\n``` handlebars\n{{capitalizeFirst \"capitalize first word in this sentence\"}}\n\n// Result\nCapitalize first word in this sentence\n```\n\n#### capitalizeEach\n_Capitalizes each word in a string._\n<br>Parameters: `none`\n``` handlebars\n{{capitalizeEach \"capitalize EACH word in this sentence\"}}\n\n// Result\nCapitalize EACH Word In This Sentence\n```\n\n#### titleize\n_Capitalizes all words within a string. Taken from the templating library [Walrus](https://github.com/jeremyruppel/walrus) by [Jeremy Ruppel](https://github.com/jeremyruppel)._\n<br>Parameters: `none`\n``` handlebars\n{{titleize \"capitalize EACH word in this sentence\"}}\n\n// Result\nCapitalize Each Word In This Sentence.\n```\n\n#### sentence\n_Capitalizes the first word of each sentence in a string and converts the rest of the sentence to lowercase._\nParameters: `none`\n``` handlebars\n{{sentence \"capitalize the FIRST word in each sentence. but make the OTHER words lowercase.\"}}\n\n// Result\nCapitalize the first word in each sentence. But make the other words lowercase.\n```\n\n#### reverse\n_Reverses a string._\n<br>Parameters: `none`\n``` handlebars\n{{reverse \"bender should NOT be allowed on TV.\"}}\n\n// Result\n.VT no dewolla eb TON dluohs redneb\n```\n\n#### truncate\n_Truncates a string given a specified `length`, providing a custom string to denote an `omission`._\n<br>Parameters: \n\n* length: `int`- The number of characters to keep (Required). \n* omission: `string` - A string to denote an omission (Optional). \n\n``` handlebars\n{{truncate \"Bender should not be allowed on tv.\" 31 \"...\"}}\n\n// Result\nBender should not be allowed...\n```\n\n#### center\n_Centers a string using non-breaking spaces._\n<br>Parameters: spaces: `int` - The number of spaces. (Required)\n``` handlebars\n{{center \"Bender should not be allowed on tv.\" 10}}\n\n// Result:\n|              Bender should not be allowed on tv.              |\n```\n\n#### nl2br\n_Convert new lines (`\\r\\n`, `\\n\\r`, `\\r`, `\\n`) to line breaks_\n<br>Parameters: `none`\n``` handlebars\n{{nl2br <br>description}}\n\n// Result: \n<br>\n```\n\n\n\n### Collections\n#### first\n_Returns the first item in a collection._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n\n```\n``` html\n// Template\n{{first collection}}\n\n// Result:\nAmy Wong\n```\n\n#### withFirst\n_Use the first item in a collection inside a block._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{#withFirst collection}}\n  <p>{{this}} is smart.</p>\n{{/withFirst}}\n\n// Result:\n<p>Amy Wong is smart.</p>\n```\n\n#### last\n_Returns the last item in a collection. Opposite of `first`._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{last collection}}\n\n// Result:\nScruffy\n```\n\n#### withLast\n_Use the last item in a collection inside a block. Opposite of `withFirst`._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{#withLast collection}}\n  <p>{{this}} is lazy.</p>\n{{/withLast}}\n\n// Result:\n<p>Scruffy is lazy.</p>\n```\n\n#### after\n_Returns all of the items in the collection after the specified count._\n<br>Parameters: count `int` - How many items to omit from the beginning. (Required)\n```\n// Date\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{after collection 5}}\n\n// Result:\nLeela, Professor Farnsworth, Scruffy\n```\n\n#### withAfter\n_Use all of the items in the collection after the specified count inside a block._\n<br>Parameters: count `int` - How many items to omit from the beginning. (Required)\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{#withAfter collection 5}}\n    {{titleize this}}\n{{/withAfter}}\n\n// Result:\nLeela Professor Farnsworth Scruffy\n```\n\n#### before\n_Returns all of the items in the collection before the specified count. Opposite of `after`._\n<br>Parameters: count `int` - How many items to omit from the end. (Required)\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{before collection 5}}\n\n// Result:\nAmy Wong, Bender, Dr. Zoidberg\n```\n\n#### withBefore\n_Use all of the items in the collection before the specified count inside a block. Opposite of `withAfter`._\n<br>Parameters: count `int` - How many items to omit from the end. (Required)\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{#withBefore collection 5}}\n    {{reverse this}}\n{{/withBefore}}\n\n// Result:\ngnoW ymA redneB grebdioZ .rD\n```\n\n#### join\n_Joins all elements of a collection into a string using a separator if specified._\n<br>Parameters: separator `string` - A string to use as a separator between the items. (Optional)\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{join collection \" & \"}}\n\n// Result:\nAmy Wong & Bender & Dr. Zoidberg & Fry & Hermes Conrad & Leela & Professor Farnsworth & Scruffy\n```\n\n#### sort\n_Returns the collection sorted._\nParameters: `none`\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n```\n``` html\n// Template\n{{sort collection}}\n\n// Result:\nAmy Wong, Bender, Dr. Zoidberg, Fry, Hermes Conrad, Leela, Professor Farnsworth, Scruffy\n```\n\n#### withSort\n_Uses the sorted collection inside the block._\n<br>Parameters: field `string` - String name of the field or property to sort by. (Optional)\n``` js\n// Data\ncollection = [\n  name: 'Leela'\n  deliveries: 8021,\n\n  name: 'Bender'\n  deliveries: 239,\n\n  name: 'Fry'\n  deliveries: -12\n]\n\n```\n``` html\n// Template\n{{#withSort collection \"deliveries\"}}\n    {{name}}: {{deliveries}} <br>\n{{/withSort}}\n\n// Result:\nFry: -12\nBender: 239\nLeela: 8021\n```\n\n#### length\n_Returns the length of the collection._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = [\n  'Amy Wong', \n  'Bender', \n  'Dr. Zoidberg', \n  'Fry', \n  'Hermes Conrad', \n  'Leela', \n  'Professor Farnsworth', \n  'Scruffy'\n]\n\n```\n``` html\n// Template\n{{length collection}}\n\n// Result:\n8\n```\n\n#### lengthEqual\n_Conditionally render a block based on the length of a collection._\n<br>Parameters: length `int` - The value to test against. (Required)\n``` js\n// Data\ncollection = [\n  name: 'Leela'\n  deliveries: 8021,\n\n  name: 'Bender'\n  deliveries: 239,\n\n  name: 'Fry'\n  deliveries: -12\n]\n```\n``` html\n// Template\n{{#lengthEqual collection 3}}\n        There are 3 people in Planet Express.\n{{else}}\n        This is not Planet Express.\n{{/lengthEqual}}\n\n// Result:\nThere are 3 people in Planet Express.\n```\n\n#### empty\n_Conditionally render a block if the collection is empty._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = []\n```\n``` html\n// Template\n{{#empty collection}}\n        Good news everyone!\n{{else}}\n        Bad news everyone!\n{{/empty}}\n\n// Result:\nGood news everyone!\n```\n#### any\n_Conditionally render a block if the collection isn't empty. Opposite of `empty`_\n<br>Parameters: `none`\n``` js\n// Data\ncollection = ['Professor Farnsworth']\n```\n``` html\n// Templates\n{{#any collection}}\n        Good news everyone!\n{{else}}\n        Bad news everyone!\n{{/any}}\n\n// Result:\nGood news everyone!\n```\n\n#### inArray\n_Conditionally render a block if a specified value is in the collection._\n<br>Parameters: value `string|int` - A value to test against. (Required)\n``` js\n// Data\ncollection = ['Professor Farnsworth', 'Fry', 'Bender']\n```\n``` html\n// Templates\n{{#inArray collection \"Fry\"}}\n        I'm walking on sunshine!\n{{else}}\n        I'm walking on darkness.\n{{/any}}\n\n// Result:\nI'm walking on sunshine!\n```\n\n#### eachIndex\n_Current implementation of the default Handlebars loop helper {{#each}} adding index (0-based index) to the loop context._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = ['Professor Farnsworth', 'Fry', 'Bender']\n```\n``` html\n// Templates\n{{#eachIndex collection}}\n    {{this}} is {{index}}\n{{/eachIndex}}\n\n// Result:\nProfessor Farnsworth is 0, Fry is 1, Bender is 2\n```\n\n#### eachProperty\n_Loop through an objects properties_\n<br>Parameters: `none`\n``` js\n// Data\nTODO...\n```\n``` html\n// Templates\n{{#eachProperty object}}\n    {{property}}: {{value}}<br/>\n{{/eachProperty }}\n\n// Result\nTODO...\n```\n\n\n### Math\n#### add\n_Returns the sum of two numbers._\n<br>Parameters: value `int` - The number to add to the expression. (Required)\n``` js\n// Data\nvalue = 5\n```\n``` html\n// Template\n{{add value 5}}\n\n// Result:\n10\n```\n\n#### subtract\n_Returns the difference of two numbers. Opposite of `add`_\n<br>Parameters: value `int` - The number to subtract from the expression. (Required)_\n``` js\n// Data\nvalue = 5\n```\n``` html\n// Template\n{{subtract value 5}}\n\n// Result:\n0\n```\n\n#### divide\n_Returns the division of two numbers._\n<br>Parameters: value `int` - The number to divide the expression. (Required)\n``` js\n// Data\nvalue = 5\n```\n``` html\n// Template\n{{divide value 5}}\n\n// Result:\n1\n```\n\n#### multiply\n_Returns the multiplication of two numbers._\n<br>Parameters: value `int` - The number to multiply the expression. (Required)\n``` js\n// Data\nvalue = 5\n\n```\n``` html\n// Template\n{{multiply value 5}}\n\n// Result:\n25\n```\n\n#### floor\n_Returns the value rounded down to the nearest integer._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = 5.6\n```\n``` html\n// Template\n{{floor value}}\n\n// Result:\n5\n```\n\n#### ceil\n_Returns the value rounded up to the nearest integer._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = 5.6\n```\n``` html\n// Template\n{{ceil value}}\n\n// Result:\n6\n```\n\n#### round\n_Returns the value rounded to the nearest integer._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = 5.69\n```\n``` html\n// Template\n{{round value}}\n\n// Result:\n6\n```\n\n#### sum\n_Returns the sum of multiple numbers. Similar to `{{#add}}` block helper but accepts multiple arguments._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = {\n  a: 1,\n  b: 2,\n  c: 3\n}\n```\n``` html\n// Template\n{{sum value.a value.b value.c}}\n\n// Result:\n6\n```\n\n\n### Numbers\n#### toFixed\n_Returns exactly `digits` after the decimal place. The number is rounded if necessary, and the fractional part is padded with zeros if necessary so that it has the specified length._\n<br>Parameters: digits `int` - The number of digits to appear after the decimal point. (Optional)\n``` js\n// Data\nvalue = 5.53231\n```\n``` html\n// Template\n{{toFixed value 3}}\n\n// Result:\n5.532\n```\n\n#### toPrecision\n_Returns the number in fixed-point or exponential notation rounded to `precision` significant digits._\n<br>Parameters: precision `int` - The number of digits. If omitted, it returns the entire number (without any formatting). (Optional)\n``` js\n// Data\nvalue = 555.322\n```\n``` html\n// Template\n{{toPrecision value 4}}\n\n// Result:\n555.3\n```\n\n#### toExponential\n_Returns the number in exponential notation with one digit before the decimal point, rounded to `fractions` digits after the decimal point._\n<br>Parameters: fractions `int` - An integer specifying the number of digits after the decimal point. (Optional)\n``` js\n// Data\nvalue = 5\n\n```\n``` html\n// Template\n{{toExponential value 5}}\n\n// Result:\n5.00000e+0\n```\n\n#### toInt\n_Returns an integer._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = '22.2abc'\n```\n``` html\n// Template\n{{toInt value}}\n\n// Result:\n22\n```\n\n#### toFloat\n_Returns a floating point number._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = '22.2abc'\n```\n``` html\n// Template\n{{toFloat value}}\n\n// Result:\n22.2\n```\n\n#### toAbbr\n_Returns the number in abbreviation formats based on a value. The number is rounded to a particular decimal place._\n<br>Parameters: digits `int` - The number of digits to appear after the decimal point. (Optional)\n<br>Default: `2`\n``` js\n// Data\nvalue = 123456789\n\n```\n``` html\n// Template\n{{toAbbr value}}\n\n// Result:\n123.457m\n```\n\n#### addCommas\n_Adds commas to a number._\n<br>Parameters: `none`\n``` js\n// Data\nvalue = 2222222\n\n```\n``` html\n// Template\n{{addCommas value}}\n\n// Result:\n2,222,222\n```\n\n\n### Comparisons: Equal\n#### is\n_Conditionally render a block if the condition is true (if x = y)._\n\nParameters: `string|int` (the value to test against)\nDefault: `undefined`\n\nExample #1:\n``` js\n// Data\n---\nnumber = 5\n---\n```\n``` html\n// Template\n{{#is number 5}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/is}}\n\n// Result:\nKiss my shiny metal ass!\n```\n\nExample #2:\n\nIf you are using [Assemble](https://github.com/assemble/assemble), data from _YAML front matter_ or any specified `JSON` and/or `YAML` source files will get passed through to the context in your templates.\n\n``` yaml\n--- # YAML Front Matter\npage:\n  title: About Us\n---\n```\n``` html\n{{#is page.title \"home\"}}\n    <h1> About Us </h1>\n{{else}}\n    Never mind :(\n{{/is}}\n```\nResult:\n```\n<h1> About Us </h1>\n```\n\n#### if_eq\n**Same as `is`, consider consolidating**\n_Conditionally render a block if the condition is true (If x = y)._\nParameters: `none`\n``` handlebars\n{{#if_eq x compare=y}} ... {{/if_eq}}\n```\n\n#### isnt\n_Conditionally render a block if the condition is false. Opposite of `is`._\n<br>Parameters: value `string|int` - the value to test against.\n``` js\n// Data\nnumber = 5\n```\n``` html\n// Template\n{{#isnt number 5}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/isnt}}\n\n// Result:\nNever mind :(\n```\n\n#### or\n_Conditionally render a block if one of the values is truthy._\n<br>Parameters: values `string|int` - the values to test against.\n``` js\ngreat = no\nmagnificent = true\n```\n``` html\n// Template\n{{#or great magnificent}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/or}}\n\n// Result:\nKiss my shiny metal ass!\n```\n\n#### and\n_Conditionally render a block if both values are truthy._\n<br>Parameters: values `string|int` - the values to test against.\n``` js\n// Data\ngreat = true\nmagnificent = true\n```\n``` html\n// Template\n{{#and great magnificent}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/and}}\n\n// Result:\nKiss my shiny metal ass!\n```\n\n#### unless_eq\n**Same as `isnt`, consider consolidating**\n_Conditionally render a block if the condition is false (Unless x = y). Opposite of `is`._\nParameters: `none`\n``` handlebars\n{{#unless_eq x compare=y}} ... {{/unless_eq}}\n```\n\n\n\n### Comparisons: Greater Than\n#### if_gt\n_Conditionally render a block if the value is greater than a given number (If x > y)._\nParameters: `none`\n``` handlebars\n{{#if_gt x compare=y}} ... {{/if_gt}}\n```\n\n#### gt\n**Same as `if_gt`, consider consolidating**\n_Conditionally render a block if the value is greater than a given number (If x > y)._\n<br>Parameters: value `string|int` - the value to test against.\n``` js\n// Data\nnumber = 5\n```\n``` html\n// Template\n{{#gt number 8}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/gt}}\n\n// Result:\nNever mind :(\n```\n\n#### unless_gt\n_Unless greater than (Unless x > y)_\nParameters: `none`\n``` handlebars\n{{#unless_gt x compare=y}} ... {{/unless_gt}}\n```\n\n#### if_gteq\n_Conditionally render a block if the value is greater or equal than a given number (If x >= y)._\nParameters: `none`\n``` handlebars\n{{#if_gteq x compare=y}} ... {{/if_gteq}}\n```\n\n#### gte\n**Same as `if_gteq`, consider consolidating**\n_Conditionally render a block if the value is greater or equal than a given number (If x >= y)._\n<br>Parameters: value `string|int` - the value to test against.\n\n``` js\nnumber = 5\n```\n``` html\n// Template\n{{#gte number 5}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/gte}}\n\n// Result:\nKiss my shiny metal ass!\n```\n\n\n#### unless_gteq\n_Render block, unless given value is greater than or equal to._\nParameters: `none`\n_Unless x >= y_\n``` handlebars\n{{#unless_gteq x compare=y}} ... {{/unless_gteq}}\n```\n\n\n### Comparisons: Less Than\n#### lt\n_Conditionally render a block if the value is less than a given number. Opposite of `gt`._\n<br>Parameters: value `string|int` - the value to test against.\n``` js\nnumber = 5\n```\n``` html\n{{#lt number 3}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/lt}}\n\n// Result:\nNever mind :(\n```\n\n#### lte\n_Conditionally render a block if the value is less or equal than a given number. Opposite of `gte`._\n<br>Parameters: value `string|int` - the value to test against.\n``` js\nnumber = 5\n```\n``` html\n// Template\n{{#lte number 5}}\n    Kiss my shiny metal ass!\n{{else}}\n    Never mind :(\n{{/lte}}\n\n// Result:\nKiss my shiny metal ass!\n```\n\n#### unless_lt \n_Render block, unless value is less than a given number (Unless x < y)_\nParameters: `none`\n``` handlebars\n{{#unless_lt x compare=y}} ... {{/unless_lt}}\n```\n\n#### unless_lteq \n_Render block, unless value is less than or equal to a given number (Unless x <= y)_\nParameters: `none`\n``` handlebars\n{{#unless_lteq x compare=y}} ... {{/unless_lteq}}\n```\n\n\n\n### Dates\n#### formatDate\n_Formats a date into a string given a format. Accepts any value that can be passed to `new Date()`. This helper is a port of the [formatDate-js](http://https://github.com/michaelbaldry/formatDate-js) library by [Michael Baldry](https://github.com/michaelbaldry)._\n<br>Parameters: format `string`, `required`\nThe format string, according to these tokens: [strftime](http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime)\n``` js\n// Data\ndate = new Date()\n```\n``` html\n// Template\n{{formatDate date \"%m/%d/%Y\"}}\n{{formatDate date \"%I:%M%p\"}}\n{{formatDate date \"%F\"}}\n{{formatDate date \"%Y%m%dT%H%M%S%z\"}}\n\n// Result:\n07/26/2012\n11:38PM\n2012-07-26\n20120726T233805-0004\n```\n\n#### now\n_Returns the current date._\n<br>Parameters: format `string` - The format string, according to these tokens: [http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime]() (Optional)\n``` html\n// Template\n{{now}}\n{{now \"%m/%d/%Y\"}}\n\n// Result:\nThu Jul 26 2012 23:41:02 GMT-0400 (AST)\n07/26/2012\n```\n\n#### timeago\n_Returns a human-readable time phrase from the given date._\n<br>Parameters: `none`\n``` js\n// Data\ndate = 'Thu Jul 22 2012 23:41:02 GMT-0400 (AST)'\n```\n``` html\n// Template\n{{timeago date}}\n\n// Result:\n4 days ago\n```\n\n\n\n### Inflections\n#### inflect\n_Returns the plural or singular form of a word based on a count._\n<br>Parameters:\n* singular `string` - The singular form of the word. (Required)\n* plural `string` - The plural form of the word. (Required)\n* include `boolean` - whether or not to include the count before the word. (Optional)\n``` js\n// Data\nenemies = 0\nfriends = 1\n```\n``` html\n// Template\n{{inflect enemies \"enemy\" \"enemies\"}}\n{{inflect friends \"friend\" \"friends\" true}}\n\n// Result:\nenemies\n1 friend\n\n#### ordinalize\n_Turns a number into an ordinal string. Taken from the templating library [Walrus](https://github.com/jeremyruppel/walrus) by [Jeremy Ruppel](https://github.com/jeremyruppel)._\n<br>Parameters: `none`\n``` html\n// Template\n{{ordinalize 3}}\n{{ordinalize 1}}\n{{ordinalize 22}}\n\n// Result:\n3rd\n1st\n22nd\n```\n\n\n### HTML\n#### gist\n_Embed public GitHub Gists by adding only the Id of the Gist. The helper also accepts an optional second parameter for targeting a specific file on the Gist.._\n\nParameters: `String`\nDefault: `undefined`\nUsage: `{{ gist [id] }}`\n\nExample:\n``` hbs\n{{gist '5193239'}}\n```\nOutput:\n``` html\n<script src=\"https://gist.github.com/5193239.js\"></script>\n```\n\n#### blockquote (planned...)\n_Create a blockquote_\n\nOutputs a string with a given attribution as a quote\n\n``` hbs\n{{#blockquote '@doowb' 'http://github.com/source/for/your/quote' 'This is the title' }}\n  This is your quote.\n{{/blockquote}}\n```\nOutput:\n\n``` html\n<blockquote>\n  <p>This is your quote.</p>\n  <footer> \n    <strong>@doowb</strong>\n    <cite> \n      <a href=\"http://github.com/source/for/your/quote\">This is the title</a>\n    </cite>\n  </footer>\n</blockquote>\n```\n   \n#### stripes\n_Iterates through an array, letting the contents know whether to add an even or odd row._\n\nParameters:\n\n* `array` to iterate over, \n* `string`: CSS class name for even rows \n* `string`: CSS class name for odd rows\n\nCredit: [treehouse blog](http://blog.teamtreehouse.com/handlebars-js-part-2-partials-and-helpers)\n\nUsage:\n``` handlebars\n{{#stripes myArray \"even\" \"odd\"}}\n  <div class=\"{{stripeClass}}\">\n    ... code for the row ...\n  </div>\n{{else}}\n  <em>There aren't any people.</em>\n{{/stripes}}\n```\n\n#### timeline (planned...)\n_Iterates through an array, letting the contents know whether a timeline entry belongs in the left or right column._\n\nParameters: \n\n* `array` to iterate over, \n* `string`: CSS class name for left columns\n* `string`: CSS class name for right columns\n\nCredit: by [@jonschlinkert](http://github.com/jonschlinkert), and based on striped helper from [treehouse blog](http://blog.teamtreehouse.com/handlebars-js-part-2-partials-and-helpers)\n\nUsage:\n``` handlebars\n<div class=\"timeline\">\n {{#timeline myArray \"left\" \"right\"}}\n <div class=\"{{columnClass}}\">\n   {{> entry}}\n </div>\n {{else}}\n   <em>There aren't any entries.</em>\n {{/timeline}}\n</div>\n```\n\n#### ul\n_Creates an unordered list._\n\nParameters: `Hash|HTML attributes`, `Optional`\n\nHTML attributes to use on the `ul` element. \n``` js\n// Data\ncollection = [\n  name: 'Leela'\n  deliveries: 8021,\n  name: 'Bender'\n  deliveries: 239,\n  name: 'Fry'\n  deliveries: 1\n]\n```\nTemplate:\n``` handlebars\n{{#ul collection class=\"deliveries-list\"}}\n  {{name}} - {{inflect deliveries \"delivery\" \"deliveries\" true}}\n{{/ul}}\n```\n``` html\n// Output:\n<ul class=\"deliveries-list\">\n  <li> Leela - 8021 deliveries </li>\n  <li> Bender - 239 deliveries </li>\n  <li> Fry - 1 delivery </li>\n</ul>\n```\n#### ol\n_Same as the `ul` helper but creates and ordered list. Returns `<br>` tags based on a count._\n\nParameters: `Hash`, `HTML attributes`, `Optional`\n\nHTML attributes to use on the `ol` element. \n``` js\n// Data\ncollection = [\n  name: 'Leela'\n  deliveries: 8021,\n  name: 'Bender'\n  deliveries: 239,\n  name: 'Fry'\n  deliveries: 1\n]\n```\n\nTemplate:\n``` handlebars\n{{#ol collection class=\"deliveries-list\"}}\n  {{name}} - {{inflect deliveries \"delivery\" \"deliveries\" true}}\n{{/ol}}\n```\n``` html\n// Output:\n<ol class=\"deliveries-list\">\n  <li> Leela - 8021 deliveries </li>\n  <li> Bender - 239 deliveries </li>\n  <li> Fry - 1 delivery </li>\n</ol>\n```\n\n#### br\n_Renders `<br>` elements in the output, based on the number given as a parameter. Not really recommended for general use, but it's here if you need it._\n\nParameters: `Integer|Count`, `Optional`\n\nThe number of `br` elements to render. \n\n`template.hbs`\n``` handlebars\n{{br 5}}\n```\nrenders to:\n``` html\n`<br><br><br><br><br>`\n```\n\n\n### Logging\n#### log\n_Simple `console.log()`_\n<br>Parameters: `none`\n``` html\n// Template\n{{log \"Hi console :)\"}}\n\n// Result:\nHi console :)\n```\n\n#### debug\n_Simple `console.debug()` that shows the current context._\n<br>Parameters: `none`\n``` js\n// Data\ncollection = [\n  name: 'Leela'\n  deliveries: 8021,\n  name: 'Bender'\n  deliveries: 239,\n  name: 'Fry'\n  deliveries: 1\n]\n```\n``` html\n// Template\n{{#withFirst collection}}\n   {{debug name}}\n{{/withFirst}}\n\n// Result:\nContext: { deliveries: 8021, name: \"Leela\" }\nValue: Leela\n```\n\n#### expandJSON\n_Return a unique, JSON-formatted array of all file or directory paths that match the given globbing pattern(s)_\n<br>Parameters: `String`\n<br> Default: `undefined`\n\nExample:\n``` html\n{{expandJSON './src/**/*.md'}}\n\n// returns\n[\n  \"./src/content/blockquotes.md\",\n  \"./src/content/chapters/01-getting-started.md\",\n  \"./src/content/chapters/02-language-features.md\",\n  \"./src/content/chapters/03-advanced-materials.md\",\n  \"./src/content/code.md\",\n  \"./src/content/emphasis.md\",\n  \"./src/content/headings.md\",\n  \"./src/content/images.md\",\n  \"./src/content/links.md\",\n  \"./src/content/lists.md\",\n  \"./src/content/markdown-here.md\",\n  \"./src/content/paragraphs.md\",\n  \"./src/content/post.md\",\n  \"./src/content/reference-links.md\",\n  \"./src/content/reference.md\",\n  \"./src/content/tables.md\",\n  \"./src/content/test.md\"\n]\n```\n\n#### expandYAML\n_Return a unique, YAML-formatted array of all file or directory paths that match the given globbing pattern(s)_\n<br>Parameters: `String`\n<br> Default: `undefined`\n\nExample:\n``` html\n{{expandYAML './src/**/*.md'}}\n\n// returns\n- \"./src/content/blockquotes.md\"\n- \"./src/content/chapters/01-getting-started.md\"\n- \"./src/content/chapters/02-language-features.md\"\n- \"./src/content/chapters/03-advanced-materials.md\"\n- \"./src/content/code.md\"\n- \"./src/content/emphasis.md\"\n- \"./src/content/headings.md\"\n- \"./src/content/images.md\"\n- \"./src/content/links.md\"\n- \"./src/content/lists.md\"\n- \"./src/content/markdown-here.md\"\n- \"./src/content/paragraphs.md\"\n- \"./src/content/post.md\"\n- \"./src/content/reference-links.md\"\n- \"./src/content/reference.md\"\n- \"./src/content/tables.md\"\n- \"./src/content/test.md\"\n```\n\n\n\n### Miscellaneous\n#### default\n_Provides a default or fallback value if a value doesn't exist._\n<br>Parameters: defaultValue `string|int` - The default value to use. `title = ''`\n\n``` html\n// Template\n{{default title \"No title available.\"}}\n\n// Result:\nNo title available.\n```\n\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\n\n## Authors\n* [Brian Woodward](http://github.com/doowb)  \n* [Jon Schlinkert](http://github.com/jonschlinkert)  \n\n\n## Credit\n> Many of these helpers come from the following repos:\n\n* [Handlebars Helpers, by Dan Harper](http://github.com/danharper)\n* [Swag v0.2.1, by Elving Rodriguez](http://elving.github.com/swag/)\n\n\n## Copyright and license\nCopyright 2013 Assemble\n\n[MIT License](LICENSE-MIT)\n\n## Release History\n* 2013-05-11\t\t\tv0.2.3\t\t\tFile globbing added to some helpers. Including md and some file helpers.\n* 2013-05-07\t\t\tv0.2.0\t\t\tA bunch of new tests for markdown and special helpers.Refactored most of the rest of the helpers to separate functions from Handlebars registration.\n* 2013-05-02\t\t\tv0.1.32\t\t\tUpdated utils and a number of helpers, including value, property, and stringify.\n* 2013-04-21\t\t\tv0.1.31\t\t\tFixing relative helper\n* 2013-04-20\t\t\tv0.1.30\t\t\tRefactoring helpers-collection module to separate the functions from the Handlebars helper registration process.\n* 2013-04-16\t\t\tv0.1.25\t\t\tAdding defineSection and renderSection helpers to try to get sections populated in a layout from the page.\n* 2013-04-07\t\t\tv0.1.21\t\t\tAdd markdown helpers back, add more tests.\n* 2013-04-06\t\t\tv0.1.20\t\t\tGeneralized helpers structure, externalized utilities.\n* 2013-04-05\t\t\tv0.1.11\t\t\tNew authors and gist helpers, general cleanup and new tests.\n* 2013-04-04\t\t\tv0.1.10\t\t\tExternalized utility javascript from helpers.js\n* 2013-03-28\t\t\tv0.1.8\t\t\tGruntfile updated with mocha tests for 71 helpers, bug fixes.\n* 2013-03-18\t\t\tv0.1.7\t\t\tNew path helper \"relative\", for resolving relative path from one absolute path to another.\n* 2013-03-16\t\t\tv0.1.3\t\t\tNew helpers, \"formatPhoneNumber\" and \"eachProperty\"\n* 2013-03-15\t\t\tv0.1.2\t\t\tUpdate README.md with documentation, examples.\n* 2013-03-06\t\t\tv0.1.0\t\t\tFirst commit.\n\n\n\n\n\n---\nAuthored by [assemble](https://github.com/assemble/assemble)\n\n_This file was generated using Grunt and [assemble](http://github.com/assemble/assemble) on Sun May 26 2013 10:24:06._\n\n\n\r\n\r\n[download]: https://github.com/assemble/helper-lib/zipball/master\r\n\r\n\r\n[org]: https://github.com/assemble\r\n[assemble]: https://github.com/assemble/assemble\r\n[issues]: https://github.com/assemble/assemble/issues\r\n[wiki]: https://github.com/assemble/assemble/wiki\r\n\r\n\r\n\r\n[config]: https://github.com/assemble/assemble/wiki/Configuration\r\n[gruntfile]: https://github.com/assemble/assemble/wiki/Gruntfile\r\n[tasks]: https://github.com/assemble/assemble/wiki/Task-and-Targets\r\n[options]: https://github.com/assemble/assemble/wiki/Options\r\n\r\n\r\n[templates]: https://github.com/assemble/assemble/wiki/Templates\r\n[layouts]: https://github.com/assemble/assemble/wiki/Layouts\r\n[pages]: https://github.com/assemble/assemble/wiki/Pages\r\n[partials]: https://github.com/assemble/assemble/wiki/Partials\r\n\r\n\r\n[content]: https://github.com/assemble/assemble/wiki/Content\r\n[data]: https://github.com/assemble/assemble/wiki/Data\r\n[yaml]: https://github.com/assemble/assemble/wiki/YAML-front-matter\r\n[markdown]: https://github.com/assemble/assemble/wiki/Markdown\r\n\r\n\r\n[helpers]: https://github.com/assemble/assemble/wiki/Helpers\r\n[assets]: https://github.com/assemble/assemble/wiki/Assets\r\n[collections]: https://github.com/assemble/assemble/wiki/Collections\r\n\r\n\r\n[examples]: https://github.com/assemble/assemble-examples\r\n[exampleReadme]: https://github.com/assemble/assemble-examples-readme\r\n[exampleBasic]: https://github.com/assemble/assemble-examples-basic\r\n[exampleAdvanced]: https://github.com/assemble/assemble-examples-advanced\r\n[exampleGrid]: https://github.com/assemble/assemble-examples-grid\r\n[exampleTable]: https://github.com/assemble/assemble-examples-table\r\n[exampleForm]: https://github.com/assemble/assemble-examples-form\r\n[exampleSite]: https://github.com/assemble/assemble-examples-site\r\n[exampleSitemap]: https://github.com/assemble/assemble-examples-sitemap\r\n\r\n\r\n[contribute]: https://github.com/assemble/assemble/wiki/Contributing-to-Assemble\r\n[extend]: https://github.com/assemble/assemble/wiki/Extending-Assemble\r\n[helpers-lib]: https://github.com/assemble/assemble/wiki/Helpers\r\n\r\n\r\n[grunt]: http://gruntjs.com/\r\n[upgrading]: http://gruntjs.com/upgrading-from-0.3-to-0.4\r\n[getting-started]: http://gruntjs.com/getting-started\r\n[package]: https://npmjs.org/doc/json.html\r\n\n\n[assemble]: https://github.com/assemble/assemble\n[pre]: https://github.com/assemble/pre\n[dry]: https://github.com/assemble/dry\n[assemble-github-com]: https://github.com/assemble/assemble.github.com\n[assemble-examples-bootstrap]: https://github.com/assemble/assemble-examples-bootstrap\n[assemble-internal]: https://github.com/assemble/assemble-internal\n[assemble-less]: https://github.com/assemble/assemble-less\n[assemble-examples-readme]: https://github.com/assemble/assemble-examples-readme\n[grunt-toc]: https://github.com/assemble/grunt-toc\n[helper-lib]: https://github.com/assemble/helper-lib\n[grunt-dry]: https://github.com/assemble/grunt-dry\n[assemble-examples]: https://github.com/assemble/assemble-examples\n",
  "readmeFilename": "README.md",
  "_id": "helper-lib@0.2.5",
  "_from": "helper-lib@0.2.x"
}
